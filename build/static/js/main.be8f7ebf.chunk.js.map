{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","fontFamily","display","textAlign","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlfor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","htmlFor","disabled","checked","newLog","Date","updateLog","Tech","updLog","console","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be8f7ebf.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';","import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from './types'\n\n// export const getLogs = () => {\n//     return async (dispatch) => {\n//         setLoading();\n\n//         const res = await fetch('/logs')\n//         const data = await res.json()\n//         dispatch({\n//             type: GET_LOGS,\n//             payload: data\n//         })\n//     }\n// }\n\n\nexport const getLogs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/logs')\n        const data = await res.json()\n        dispatch({\n            type: GET_LOGS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\nexport const addLog = (log) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/logs', {\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        const data = await res.json()\n        dispatch({\n            type: ADD_LOG,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\n\nexport const deleteLog = (id) => async dispatch => {\n    try {\n        setLoading();\n\n        await fetch(`/logs/${id}`, { method: 'DELETE' })\n\n        dispatch({\n            type: DELETE_LOG,\n            payload: id\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\nexport const updateLog = log => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch(`/logs/${log.id}`, { method: 'PUT', body: JSON.stringify(log), headers: { 'Content-Type': 'application/json' } })\n\n        const data = await res.json()\n\n        dispatch({\n            type: UPDATE_LOG,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\n\nexport const searchLogs = (text) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch(`/logs?q=${text}`)\n        const data = await res.json()\n        dispatch({\n            type: SEARCH_LOGS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\n\n\nexport const setCurrent = log => {\n    return {\n        type: SET_CURRENT,\n        payload: log\n    }\n}\n\nexport const clearCurrent = () => {\n    return {\n        type: CLEAR_CURRENT,\n\n    }\n}\n\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING\n    }\n}","import React, { useRef } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { searchLogs } from '../../actions/logActions';\n\nconst SearchBar = ({ searchLogs }) => {\n    const text = useRef('')\n    const onChange = (e) => {\n        searchLogs(text.current.value)\n    }\n    return (\n        <div>\n            <h3 style={{ fontFamily: 'Open Sans Condensed', display: \"block\", textAlign: 'center' }}>Welcome</h3>\n            <nav style={{ marginBottom: '30px' }} className=\"grey\">\n\n                <div className=\"nav-wrapper\">\n                    <form>\n                        <div className=\"input-field\">\n                            <input id=\"search\" type=\"search\" placeholder=\"Search Logs...\" ref={text} onChange={onChange} />\n                            <label className=\"label-icon\" htmlfor=\"search\"><i className=\"material-icons\">search</i></label>\n                            <i className=\"material-icons\">close</i>\n                        </div>\n                    </form>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nSearchBar.propTypes = {\n    searchLogs: PropTypes.func.isRequired\n}\n\nexport default connect(null, { searchLogs })(SearchBar)\n","import React from 'react'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { deleteLog, setCurrent } from '../../actions/logActions'\nimport M from 'materialize-css/dist/js/materialize.min.js'\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n    const onDelete = () => {\n        deleteLog(log.id)\n        M.toast({ html: 'Log Deleted' })\n    }\n\n\n    return (\n        <li className=\"collection-item\">\n            <div>\n                <a href=\"#edit-log-modal\" className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`}\n                    onClick={() => setCurrent(log)}\n                >{log.message}</a>\n                <br />\n                <span className='grey-text'>\n                    <span className=\"black-text\">ID #{log.id}</span> last updated by {''}\n                    <span className=\"black-text\">{log.tech}</span> on <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\n                </span>\n                <a className=\"secondary-content\" href=\"#!\" onClick={onDelete}><i className=\"material-icons grey-text\">delete</i></a>\n            </div>\n        </li>\n    )\n}\n\nLogItem.propTypes = {\n    log: PropTypes.object.isRequired,\n    deleteLog: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteLog, setCurrent })(LogItem)\n","import React from 'react'\n\nconst Preloader = () => {\n    return (\n        <div className=\"progress blue lighten-4\">\n            <div className=\"indeterminate blue\"></div>\n        </div>\n    )\n}\n\nexport default Preloader\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport { PropTypes } from 'prop-types';\nimport { getLogs } from '../../actions/logActions'\nimport '../../App.css'\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n\n    useEffect(() => {\n        getLogs()\n    }, [])\n\n    if (loading || logs === null) {\n        return <Preloader />\n    }\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h5 className=\"center\" style={{ fontFamily: 'Open Sans Condensed' }}>System Logs</h5>\n            </li>\n            {!loading && logs.length === 0 ? (<p className=\"center\">No Logs to show...</p>) : (logs.map(log => <LogItem log={log} key={log.id} />))}\n        </ul >\n    )\n}\n\n\nLogs.propTypes = {\n    log: PropTypes.object.isRequired,\n    getLogs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    log: state.log\n})\n\nexport default connect(mapStateToProps, { getLogs })(Logs)\n\n\n","import React from 'react'\n\nconst AddBtn = () => {\n    return (\n        <div className=\"fixed-action-btn\">\n            <a className=\"btn-floating btn-large blue darken-2 modal-trigger\" href=\"#add-log-modal\"><i className=\"large material-icons\">add</i></a>\n            <ul>\n                <li>\n                    <a className=\"btn-floating btn-large green modal-trigger\" href=\"#tech-list-modal\">\n                        <i className=\"material-icons\">person</i>\n                    </a>\n                </li>\n                <li>\n                    <a className=\"btn-floating btn-large red modal-trigger\" href=\"#add-tech-modal\">\n                        <i className=\"material-icons\">addperson</i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default AddBtn\n","import { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR } from \"./types\";\n\n\nexport const getTechs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/techs')\n        const data = await res.json()\n        dispatch({\n            type: GET_TECHS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: TECHS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\n\nexport const addTech = (tech) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/techs', { method: 'POST', body: JSON.stringify(tech), headers: { 'Content-Type': 'application/json' } })\n        const data = await res.json()\n        dispatch({\n            type: ADD_TECH,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: TECHS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\nexport const deleteTech = (id) => async dispatch => {\n    try {\n        setLoading();\n\n        await fetch(`/techs/${id}`, {\n            method: 'DELETE'\n        })\n\n        dispatch({\n            type: DELETE_TECH,\n            payload: id\n        })\n    } catch (err) {\n        dispatch({\n            type: TECHS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n}\n\n\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { getTechs } from '../../actions/techActions'\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n    useEffect(() => {\n        getTechs()\n    }, [])\n    return (\n        !loading && techs !== null && techs.map(t => <option key={t.id} value={`${t.firstName} ${t.lastName}`}>{t.firstName} {t.lastName}</option>)\n    )\n}\n\nTechSelectOptions.propTypes = {\n    tech: PropTypes.object.isRequired,\n    getTechs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    tech: state.tech\n})\n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions)\n\n","import React, { useState } from 'react'\nimport TechSelectOptions from '../techs/TechSelectOptions'\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\nimport { addLog } from '../../actions/logActions'\nimport M from 'materialize-css/dist/js/materialize.min.js'\n\n\n\nconst AddLogModal = ({ addLog }) => {\n    const [message, setMessage] = useState(\"\");\n    const [attention, setAttention] = useState(\"false\");\n    const [tech, setTech] = useState('')\n\n    const onSubmit = () => {\n        if (message === '' || tech === '') {\n            M.toast({ html: 'Please Enter a message and Tech' })\n        } else {\n            const newLog = {\n                message,\n                attention,\n                tech,\n                date: new Date()\n            }\n\n            addLog(newLog)\n\n            M.toast({ html: `Log added by ${tech}` })\n\n\n            setMessage('')\n            setTech('')\n            setAttention(false)\n        }\n    }\n\n\n    return (\n        <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n            <div className=\"modal-content\">\n                <h4>Enter System Log</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"message\" value={message} onChange={e => setMessage(e.target.value)} />\n                        <label htmlFor=\"message\" className=\"active\">Log Message</label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\n                            <option value=\"\" disabled>Select Technician</option>\n                            <TechSelectOptions />\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <p>\n                            <label>\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)} />\n                                <span>Needs Attention</span>\n                            </label>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#\" onClick={onSubmit} className=\"modal-close waves-effect blue btn\">Enter</a>\n            </div>\n        </div>\n    )\n}\n\nAddLogModal.propTypes = {\n    addLog: PropTypes.func.isRequired\n}\n\nconst modalStyle = {\n    width: '75%',\n    height: '75%'\n}\n\nexport default connect(null, { addLog })(AddLogModal)\n","import React, { useState, useEffect } from 'react'\nimport TechSelectOptions from '../techs/TechSelectOptions'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport M from 'materialize-css/dist/js/materialize.min.js'\nimport { updateLog } from '../../actions/logActions'\n\nconst EditLogModal = ({ current, updateLog }) => {\n    const [message, setMessage] = useState(\"\");\n    const [attention, setAttention] = useState(\"false\");\n    const [tech, setTech] = useState('')\n\n    useEffect(() => {\n        if (current) {\n            setMessage(current.message);\n            setAttention(current.attention);\n            setTech(current.Tech);\n        }\n    }, [current])\n\n    const onSubmit = () => {\n        if (message === '' || tech === '') {\n            M.toast({ html: 'Please Enter a message and Tech' })\n        } else {\n\n            const updLog = {\n                id: current.id,\n                message, attention, tech, date: new Date()\n            }\n\n            updateLog(updLog);\n            M.toast({ html: `Log updated by ${tech}` })\n\n\n            console.log(message, tech, attention)\n            setMessage('')\n            setTech('')\n            setAttention(false)\n        }\n    }\n\n\n    return (\n        <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n            <div className=\"modal-content\">\n                <h4>Enter Task Log</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"message\" value={message} onChange={e => setMessage(e.target.value)} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\n                            <option value=\"\" disabled>Select Technician</option>\n                            <TechSelectOptions />\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <p>\n                            <label>\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)} />\n                                <span>Needs Attention</span>\n                            </label>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#\" onClick={onSubmit} className=\"modal-close waves-effect blue btn\">Enter</a>\n            </div>\n        </div>\n    )\n}\n\nconst modalStyle = {\n    width: '75%',\n    height: '75%'\n}\n\nEditLogModal.propTypes = {\n    current: PropTypes.object,\n    updateLog: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({ current: state.log.current })\n\nexport default connect(mapStateToProps, { updateLog })(EditLogModal)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addTech } from '../../actions/techActions'\nimport M from 'materialize-css/dist/js/materialize.min.js'\nimport PropTypes from 'prop-types';\n\nconst AddTechModal = ({ addTech }) => {\n    const [firstName, setFirstName] = useState(\"\");\n\n    const [lastName, setLastName] = useState('')\n\n    const onSubmit = () => {\n        if (firstName === '' || lastName === '') {\n            M.toast({ html: 'Please Enter the first and last name' })\n        } else {\n            addTech({\n                firstName,\n                lastName\n            })\n            M.toast({ html: `${firstName} ${lastName} was added as a Tech` })\n            setFirstName('')\n            setLastName('')\n        }\n    }\n\n\n    return (\n        <div id=\"add-tech-modal\" className=\"modal\" >\n            <div className=\"modal-content\">\n                <h4>New Technician</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"firstName\" value={firstName} onChange={e => setFirstName(e.target.value)} />\n                        <label htmlFor=\"firstName\" className=\"active\">First Name</label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"lastName\" value={lastName} onChange={e => setLastName(e.target.value)} />\n                        <label htmlFor=\"lastName\" className=\"active\">Last Name</label>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect blue btn\">Enter</a>\n            </div>\n        </div>\n    )\n}\n\nAddTechModal.propTypes = {\n    addTech: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addTech })(AddTechModal)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { deleteTech } from '../../actions/techActions'\nimport M from 'materialize-css/dist/js/materialize.min.js'\n\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\n    const onDelete = () => {\n        deleteTech(id)\n        M.toast({ html: 'Technician Deleted' })\n    }\n    return (\n        <li className=\"collection-item\">\n            <div>\n                {firstName} {lastName}\n                <a href=\"#!\" className=\"secondary-content\" onClick={onDelete} >\n                    <i className=\"material-icons grey-text\">delete</i>\n                </a>\n            </div>\n        </li>\n    )\n}\n\nTechItem.propTypes = {\n    tech: PropTypes.object.isRequired,\n    deleteTech: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteTech })(TechItem)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions'\nimport TechItem from './TechItem';\n\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n\n    useEffect(() => {\n        getTechs()\n    }, [])\n\n\n    return (\n        <div id=\"tech-list-modal\" className=\"modal\">\n            <div className=\"modal-content\">\n                <h4>Technician List</h4>\n                <ul className=\"collection\">\n                    {!loading && techs !== null && techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nTechListModal.propTypes = {\n    tech: PropTypes.object.isRequired,\n    getTechs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({ tech: state.tech })\n\nexport default connect(mapStateToProps, { getTechs })(TechListModal)\n\n\n","import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from '../actions/types'\n\n\nconst initialState = {\n    logs: null,\n    current: null,\n    loading: false,\n    error: null\n}\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_LOGS:\n            return {\n                ...state,\n                logs: action.payload,\n                loading: false\n            };\n        case ADD_LOG:\n            return {\n                ...state,\n                logs: [...state.logs, action.payload],\n                loading: false\n            }\n        case DELETE_LOG:\n            return {\n                ...state,\n                logs: state.logs.filter(log => log.id !== action.payload),\n                loading: false\n            }\n        case UPDATE_LOG:\n            return {\n                ...state,\n                logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log)\n            }\n\n        case SEARCH_LOGS:\n            return {\n                ...state,\n                logs: action.payload\n            }\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case LOGS_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n}","import { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR } from \"../actions/types\";\n\nconst initialState = {\n    techs: null,\n    loading: false,\n    error: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TECHS:\n            return {\n                ...state,\n                techs: action.payload,\n                loading: false\n            }\n        case ADD_TECH:\n            return {\n                ...state,\n                techs: [...state.techs, action.payload],\n                loading: false\n            }\n        case DELETE_TECH:\n            return {\n                ...state,\n                techs: state.techs.filter(tech => tech.id !== action.payload),\n                loading: false\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case TECHS_ERROR:\n            console.error(action.payload);\n            return {\n                ...state,\n                error: action.payload,\n                loading: false\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport logReducer from \"./logReducer\";\nimport techReducer from \"./techReducer\";\n\nexport default combineReducers({\n    log: logReducer,\n    tech: techReducer\n})","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import React, { useEffect } from 'react';\nimport SearchBar from './components/layout/SearchBar'\nimport Logs from './components/logs/Logs'\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nfunction App() {\n  useEffect(() => {\n    M.AutoInit();\n  })\n  return (\n    <Provider store={store}>\n      <>\n        <SearchBar />\n        <div className=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}